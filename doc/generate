#!/bin/bash

source_dir="../src"
source_dir_regex='..\/src\/'


function generate_file 
{
	local tmp=`mktemp`
	local path=$1
	local outpath=$2

	source-highlight -s python -f html -i $path -o $outpath.html

	local outpath=$outpath.html

      	#rm <pre> </pre>
	cat $outpath | sed -e 's/\(<pre>\|<\/pre>\)//' > $tmp
	cp $tmp $outpath

	#add <br/>
	cat $outpath | sed -e 's/^\(.*\)$/\1<br\/>/' > $tmp
	cp $tmp $outpath

	cat $outpath | sed -e 's/\(^\|>\) /\1\&nbsp;/' > $tmp
	cp $tmp $outpath

	cat $outpath | sed '1,4 d' > $tmp
	cp $tmp $outpath

	#<img
	cat $outpath | sed -e 's/$&lt;\([^&]*\)&gt;\$/<\1>/g' > $tmp
	cp $tmp $outpath

	#space
	while [ `cat $outpath | grep -e 'nbsp; ' | wc -l` -ne 0  ] ; do
		cat $outpath | sed -e 's/&nbsp; /\&nbsp;\&nbsp;/' > $tmp
		cp $tmp $outpath
	done

    	cat head.tpl > $tmp
	cat $outpath >> $tmp
	echo '</body>' >> $tmp
	cp $tmp $outpath
	#echo "$path --> $outpath generated"
	echo "$outpath generated"

	rm $tmp
}


function generate_dir
{
	local dir=$1
	local ignore=$2

	for file in $(ls $dir | grep -v '\(__init__.py\)\|\(__pycache__\)' ); do
		if [ `echo $file | grep -e "$ignore" | wc -l` -eq 1 ] ; then
		    continue
		fi
		#echo "$file from $dir"

		local outputP=`echo $dir/$file | sed -e "s/$source_dir_regex//"`
		if [ -d "$dir/$file" ]; then
		    mkdir $outputP
		    echo "<li>$file<ul>" >> pages.html
		    generate_dir $dir/$file $ignore
		    echo "</ul></li>" >> pages.html
		else
		    #echo "Looking for $dir/$file $outputP"
		    generate_file $dir/$file $outputP
		    echo "<li><a href='$outputP.html' target='classFrame'>$file</a></li>" >> pages.html
		fi
	done

}



echo "clearing old files ..."
for dir in $(find . -type d -exec ls -d {} \; ) ; do
     if [ ! "$dir" == "." ]; then
     	rm $dir/*.html
	rm -rf $dir
     fi
done

rm -r *.html

if [ "$1" == "clean" ]; then
	exit 0
fi

echo '<fieldset>
<legend>log experiments (FR)</legend>
<li>by date</li>
<li><a href="../by_experiment.html" target="classFrame">by experiment</a></li>
</fieldset>
<fieldset>
<legend>basic sources (with mathjax)</legend>' > pages.html


#source
generate_dir "$source_dir" "articles"

echo '</fieldset>
<fieldset>
<legend>source experiments</legend>' >> pages.html


#source experiments
mkdir articles
generate_dir $source_dir/articles "*"

echo '</fieldset>
<fieldset>
<legend>data</legend>' >> pages.html

#.txt files
for file in $(find ../data -name '*.txt'); do
	filename=`echo $file | sed -e "s/..\/data\///"`
	realfilename=`echo $filename | sed -e 's/data\///'`

	dir=`echo $filename | sed -e 's/[^/]*[.]txt//'`

	if [ ! "$dir" == "" ] ; then
	  mkdir -p $dir
	fi

	echo "<li><a href='$filename.html' target='classFrame'>$realfilename</a></li>" >> pages.html

	source-highlight -s txt -f html -i $file -o $filename.html

	echo "$filename.html done"
done

echo '</fieldset>' >> pages.html
